/*!
 * angular-ui-scrollpoint
 * https://github.com/angular-ui/ui-scrollpoint
 * Version: 1.2.0 - 2015-11-11T01:45:07.327Z
 * License: MIT
 */
!function(){"use strict";angular.module("ui.scrollpoint",[]).directive("uiScrollpoint",["$window",function(o){function t(){if(angular.isDefined(o.pageYOffset))return o.pageYOffset;var t=document.compatMode&&"BackCompat"!==document.compatMode?document.documentElement:document.body;return t.scrollTop}return{require:"^?uiScrollpointTarget",scope:{uiScrollpoint:"@"},link:function(e,n,i,l){function r(o){if(o){if("string"==typeof o)if("-"===o.charAt(0))a=!1,f=-parseFloat(o.substr(1));else if("+"===o.charAt(0))a=!1,f=parseFloat(o.substr(1));else{var t=parseFloat(o);!isNaN(t)&&isFinite(t)&&(a=!0,f=t)}else if("number"==typeof o)return void r(o.toString())}else a=!1;u=a?e.uiScrollpoint:n[0].offsetTop+f}function s(){var o=a?e.uiScrollpoint:n[0].offsetTop+f,i=l?p[0].scrollTop:t();!n.hasClass("ui-scrollpoint")&&i>o?(n.addClass("ui-scrollpoint"),u=o):n.hasClass("ui-scrollpoint")&&u>i&&n.removeClass("ui-scrollpoint")}function c(){n.removeClass("ui-scrollpoint"),u=a?e.uiScrollpoint:n[0].offsetTop+f,s()}var u,a=!0,f=0,p=l&&l.$element||angular.element(o);r(e.uiScrollpoint),e.$on("scrollpointShouldReset",c),p.on("scroll",s),s(),e.$on("$destroy",function(){p.off("scroll",s)}),e.$watch("uiScrollpoint",function(o){r(o),s()})}}}]).directive("uiScrollpointTarget",[function(){return{controller:["$element",function(o){this.$element=o}]}}])}();